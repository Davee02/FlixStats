// <auto-generated />
using System;
using FlixStats.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FlixStats.Migrations
{
    [DbContext(typeof(StatsContext))]
    [Migration("20200401090546_AddProfileNameToResultQuery")]
    partial class AddProfileNameToResultQuery
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FlixStats.Models.EntityFrameworkModels.LeaderboardItem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("PublisheDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("TotalPlaybackTime")
                        .HasColumnType("int");

                    b.Property<string>("UserCountry")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LeaderboardItems");
                });

            modelBuilder.Entity("FlixStats.Models.EntityFrameworkModels.NetflixViewedItem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CountryCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DeviceType")
                        .HasColumnType("int");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<string>("EpisodeTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EstRating")
                        .HasColumnType("int");

                    b.Property<int>("Index")
                        .HasColumnType("int");

                    b.Property<int>("MovieId")
                        .HasColumnType("int");

                    b.Property<int>("PlaybackBookmark")
                        .HasColumnType("int");

                    b.Property<DateTime>("PlaybackDateTime")
                        .HasColumnType("datetime2");

                    b.Property<long?>("QueryId")
                        .HasColumnType("bigint");

                    b.Property<string>("SeasonDescriptor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SeriesId")
                        .HasColumnType("int");

                    b.Property<string>("SeriesTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TopNodeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VideoTitle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("QueryId");

                    b.ToTable("NetflixViewedItems");
                });

            modelBuilder.Entity("FlixStats.Models.EntityFrameworkModels.QueryResult", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ForProfile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Identifier")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsPublishedToLeaderboard")
                        .HasColumnType("bit");

                    b.Property<bool>("KeepResults")
                        .HasColumnType("bit");

                    b.Property<DateTime>("QueryDateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("QueryResults");
                });

            modelBuilder.Entity("FlixStats.Models.EntityFrameworkModels.NetflixViewedItem", b =>
                {
                    b.HasOne("FlixStats.Models.EntityFrameworkModels.QueryResult", "Query")
                        .WithMany("NetflixViewedItems")
                        .HasForeignKey("QueryId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
