@model FlixStats.Models.ViewModels.NetflixStatsViewModel

@{
    ViewData["Title"] = "Results";
}

<div class="main-content">

    <p class="text-center lead">The data which you can view on this page was loaded at @Model.QueryDateTime.ToString("yyyy-MM-dd HH:mm:ss")</p>

    @if (!Model.ResultsAreKept)
    {
        <div class="alert alert-primary alert-dismissible fade show" role="alert">
            <strong>Important:</strong> Your results are only saved for 12 hours. If you want to share it with your friends or keep it for another reason, please go to the <a id="share-section-link" href="javascript:;" class="alert-link">share section</a> and click the <i>Keep results</i>-button
            <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>
        </div>
    }

    <!-- Tabstrip -->
    <ul class="nav nav-tabs" role="tablist">
        <li role="presentation" class="nav-item">
            <a class="nav-link active" href="#overview" id="overviewt-tab" role="tab" data-toggle="tab">Overview</a>
        </li>
        <li role="presentation" class="nav-item">
            <a class="nav-link" href="#per-serie" id="per-serie-tab" role="tab" data-toggle="tab">Per serie</a>
        </li>
        <li role="presentation" class="nav-item">
            <a class="nav-link" href="#per-day" id="per-day-tab" role="tab" data-toggle="tab">Per day</a>
        </li>
        <li role="presentation" class="nav-item">
            <a class="nav-link" href="#per-daytime" id="per-daytime-tab" role="tab" data-toggle="tab">Per daytime</a>
        </li>
        <li role="presentation" class="nav-item">
            <a class="nav-link" href="#per-weekday" id="per-weekday-tab" role="tab" data-toggle="tab">Per weekday</a>
        </li>
        <li role="presentation" class="nav-item">
            <a class="nav-link" href="#per-country" id="per-country-tab" role="tab" data-toggle="tab">Per country</a>
        </li>
        <li role="presentation" class="nav-item">
            <a class="nav-link" href="#share-export" id="share-export-tab" role="tab" data-toggle="tab">Share / export</a>
        </li>
    </ul>

    <!-- Tab panes -->
    <div class="tab-content">
        <div role="tabpanel" class="tab-pane fade show active" id="overview">
            <partial name="Partials/_OverviewPartial" model="@Model" />
        </div>

        <div role="tabpanel" class="tab-pane fade" id="per-serie">
            <partial name="Partials/_PerSeriePartial" model="@Model" />
        </div>

        <div role="tabpanel" class="tab-pane fade" id="per-day">
            <partial name="Partials/_PerDatePartial" model="@Model" />
        </div>

        <div role="tabpanel" class="tab-pane fade" id="per-daytime">
            <partial name="Partials/_PerDayTimePartial" model="@Model" />
        </div>

        <div role="tabpanel" class="tab-pane fade" id="per-weekday">
            <partial name="Partials/_PerWeekDayTimePartial" model="@Model" />
        </div>

        <div role="tabpanel" class="tab-pane fade" id="per-country">
            <partial name="Partials/_PerCountryPartial" model="@Model" />
        </div>

        <div role="tabpanel" class="tab-pane fade" id="share-export">
            <partial name="Partials/_ShareExportPartial" model="@Model" />
        </div>
    </div>
</div>


@section Scripts
{
    <partial name="_ValidationScriptsPartial"/>
    <partial name="_ChartScriptsPartial"/>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/social-share-kit/1.0.15/js/social-share-kit.js"></script>
    <script>
        SocialShareKit.init();

        @Html.Raw(Model.ViewedHoursPerSerieChart.CreateChartCode("timePerSerieBarChart"))
        @Html.Raw(Model.ViewedHoursPerDayChart.CreateChartCode("timePerDateBarChart"))
        @Html.Raw(Model.HourlyActivityChart.CreateChartCode("hourlyWatchedRadioChart"))
        @Html.Raw(Model.WeekDailyActivityChart.CreateChartCode("weekDailyWatchedBarChart"));
        @Html.Raw(Model.ViewedPercentagePerCountryChart.CreateChartCode("timePerCountryPieChart"));

        $("#timePerDateBarChart").click(e => {
            const activeBars = timePerDateBarChart.getElementsAtEvent(e);

            if (activeBars.length > 0) {
                const clickedElementindex = activeBars[0]["_index"];
                const label = timePerDateBarChart.data.labels[clickedElementindex];

                $.get(`/stats/ajax/playbacks/@Model.Identifier?forDate=${label}`,
                    data => {
                        $('#per-day-sub').html(data);
                    });
            }
        });

        $("#per-serie-reset-zoom").click(() => {
            timePerSerieBarChart.resetZoom();
        });

        $("#per-date-reset-zoom").click(() => {
            timePerDateBarChart.resetZoom();
        });

        $("#share-section-link").click(() => {
            $("#share-export-tab").tab("show");
        });

        $("#btn-save-results").click(() => {
            $("#btn-save-results").hide();
            $.post(`/stats/ajax/keepResults/@Model.Identifier`);
        });

        $("#btn-add-leaderboard").click(() => {
            if ($("#leaderboard-form").valid()) {
                $.post(`/stats/ajax/addToLeaderboard/@Model.Identifier`, $("#leaderboard-form").serialize());
                $("#publish-leaderboard-modal").modal('hide');
                $("#btn-publish-leaderboard").hide();
            }
        });

        $(document).ready(() => {
            if ($(window).width() < 768) {
                // disable zoom on charts when used on a small touch-device
                timePerDateBarChart.options.zoom.enabled = false;
                timePerDateBarChart.options.pan.enabled = false;
                timePerDateBarChart.update();

                timePerSerieBarChart.options.zoom.enabled = false;
                timePerSerieBarChart.options.pan.enabled = false;
                timePerSerieBarChart.update();
            }
        });

    </script>
}